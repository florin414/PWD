@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}
@await Component.InvokeAsync("Notyf")

<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-4">
        <section>
            <form id="account" method="post">
                <h2>Use a local account to log in.</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-floating">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                    <label asp-for="Input.Email" class="form-label"></label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" />
                    <label asp-for="Input.Password" class="form-label"></label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div>
                    <div class="checkbox">
                        <label asp-for="Input.RememberMe" class="form-label">
                            <input class="form-check-input" asp-for="Input.RememberMe" />
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to log in.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}


<style>
    /* Stilizare formular de autentificare */
    form {
        margin-top: 50px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0px 0px 10px #ccc;
        padding: 30px;
    }

    /* Stilizare titlu */
    h1 {
        text-align: center;
        margin-top: 50px;
    }

    /* Stilizare buton de autentificare */
    #login-submit {
        margin-top: 20px;
    }

    /* Stilizare link-uri */
    a {
        color: #007bff;
    }

        a:hover {
            color: #0056b3;
            text-decoration: none;
        }

    /* Stilizare mesaje de eroare */
    .text-danger {
        color: #dc3545;
        font-size: 0.875rem;
    }

    /* Stilizare form-floating */
    .form-floating {
        margin-top: 10px;
    }

        .form-floating label {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            font-size: 1rem;
            line-height: 1.5;
            pointer-events: none;
            color: #495057;
            opacity: 0.5;
            transition: all 0.1s ease-out;
            transform-origin: left bottom;
            transform: translate(0, 2.25rem) scale(1);
        }

        .form-floating input {
            border: none;
            border-radius: 0;
            outline: none;
            box-shadow: none;
            font-size: 1rem;
            padding: 0.375rem 0.75rem;
            background-color: transparent;
            margin-top: 25px;
        }

            .form-floating input:focus {
                border: none;
                box-shadow: none;
            }

                .form-floating input:not(:placeholder-shown) + label,
                .form-floating input:focus + label {
                    transform: translate(0, 0) scale(0.85);
                    opacity: 1;
                }

    /* Stilizare coloane */
    .col-md-4 {
        margin-bottom: 50px;
    }

    .col-md-6 {
        margin-bottom: 50px;
    }

    /* Stilizare mesaj de informare */
    .alert {
        margin-top: 50px;
    }
</style>